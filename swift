class LemonBankProfileController: NSObject
{

    var profile: THMTrustDefender!
    dynamic var loginOkay: Bool = false

    override init()
    {
        super.init()

        struct DispatchOnceTokens
        {
            static var configureOnce: dispatch_once_t = 0;
        }


        //Get a singleton instance of TrustDefenderMobile
        self.profile = THMTrustDefender.sharedInstance() as THMTrustDefender

        //The profile.configure method is effective only once and subsequent calls to it will be ignored. By having a dipatch_once here we make sure configure is called in our code
        // only once, although using a dispatch_once is not technically required.
        dispatch_once(&DispatchOnceTokens.configureOnce)
            {
                //Configuration only fails due to programming error, therefore by using an assert here we make sure there is no error in our configuration object
                 assert((self.profile.configure([
                                                    THMOrgID:”ORG_ID”,
						       // (OPTIONAL) Set Enhanced Profiling Server Domain to be used for profiling
                                                    THMFingerprintServer : "your.fp.server.com",	
                                                    // (OPTIONAL) Set the connection timeout, in seconds
                                                    THMTimeout : 10,
                                                    // (OPTIONAL) If Keychain Access sharing groups are used, specify like this
                                                    THMKeychainAccessGroup: "8VDTV2QZMS.com.threatmetrix",
                                                    // (OPTIONAL) Register for location service updates
                                                    // Note that this call can prompt the user for permissions. The related call
                                                    // registerLocationServices will only activate location services have already been
                                                    // granted. But in this case, we want the request to happen
                                                    THMLocationServicesWithPrompt: true
                                                ])),
                "Configuration failed")
            }
    }


    func doProfile()
    {
        // (OPTIONAL) Retrieve the version of the mobile SDK
        NSLog("Using \(profile.version)")

        //Please make sure the session id is unique for each profiling.
        let options : [String : AnyObject] = [THMCustomAttributes: ["attribute 1", "attribute 2"], THMSessionID: "<UNIQUE SESSION ID>"]

        loginOkay = false

        // Fire off the profiling request.
        let status: THMStatusCode = profile.doProfileRequestWithOptions(
            options, andCallbackBlock:
            {(result: [NSObject : AnyObject]!) -> Void in

                let results:NSDictionary! = result as NSDictionary
                let status:THMStatusCode = THMStatusCode(rawValue:(results.valueForKey(THMProfileStatus) as! NSNumber).integerValue)!

                let sessionId: NSString = results.valueForKey(THMSessionID) as! NSString
                if(status == .Ok)
                {
                    // No errors, profiling succeeded!
                }

                NSLog("Profile completed with: %@ and session ID: \(sessionId)",
                        status == .Ok                  ? "OK"                   :
                        status == .NetworkTimeoutError ? "Timed out"            :
                        status == .ConnectionError     ? "Connection Error"     :
                        status == .HostNotFoundError   ? "Host Not Found Error" :
                        status == .InternalError       ? "Internal Error"       :
                        status == .InterruptedError    ? "Interrupted Error"    :
                    "Other"
                )
                self.loginOkay = true
        })

        if(status == .Ok)
        {
            // The profiling successfully started, if a session id was generated by the SDK, it is now available
            let sessionId:String = (profile.getResult() as NSDictionary).valueForKey(THMSessionID) as! String

            NSLog("My session id is \(sessionId)")
        }
        else
        {
            // We errored out, allow the login to proceed
            loginOkay = true
        }
    }

}

